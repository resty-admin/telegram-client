import { Start, Update } from "nestjs-telegraf";
import { STICKERS } from "src/app/shared/constants";

import { environment } from "../../../../environments/environment";
import { IStateContext } from "../../../shared";

const text = `–ü—Ä–∏–≤–µ—Ç üëãüèº 
–Ø - —Ç–≤–æ–π –æ–Ω–ª–∞–π–Ω –æ—Ñ–∏—Ü–∏–∞–Ω—Ç, Resty!  

–•–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏, –∏–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–≤–æ–π —Å—á–µ—Ç?

–Ø –∑–¥–µ—Å—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ üôåüèº
`;

@Update()
export class BotUpdate {
	@Start()
	async start(context: IStateContext) {
		console.log('start');
		if (environment.production) {
			await context.replyWithSticker(STICKERS.hello);
		}
		await context.reply(text, {
			reply_markup: {
				inline_keyboard: [[{ text: "–û—Ç–∫—Ä—ã—Ç—å", web_app: { url: environment.appUrl } }]]
			}
		});
	}
}
